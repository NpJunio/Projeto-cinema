{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heyll\\\\Downloads\\\\Projeto-cinema\\\\Projeto-cinema\\\\cinema\\\\frontend\\\\src\\\\features\\\\users\\\\pages\\\\Inicio\\\\FilmeList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport './FilmeList.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FilmeList() {\n  _s();\n  const [filmes, setFilmes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:3001/filmes\") // ajusta a URL conforme sua API\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(\"Erro ao carregar filmes\");\n      }\n      return res.json();\n    }).then(data => {\n      setFilmes(data);\n      setLoading(false);\n    }).catch(err => {\n      setError(err.message);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Carregando filmes...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Erro: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-filmes\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Filmes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: filmes.map((filme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: filme.imagem,\n            className: \"card-img-top\",\n            alt: `Imagem do filme ${filme.titulo}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: filme.titulo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: filme.descricao\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(FilmeList, \"mzN4WY7GGmaIcK3pq34xbywNYiI=\");\n_c = FilmeList;\nvar _c;\n$RefreshReg$(_c, \"FilmeList\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","FilmeList","_s","filmes","setFilmes","loading","setLoading","error","setError","fetch","then","res","ok","Error","json","data","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","filme","index","src","imagem","alt","titulo","descricao","_c","$RefreshReg$"],"sources":["C:/Users/heyll/Downloads/Projeto-cinema/Projeto-cinema/cinema/frontend/src/features/users/pages/Inicio/FilmeList.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport './FilmeList.css';\r\nimport axios from \"axios\";\r\n\r\nexport default function FilmeList() {\r\n  const [filmes, setFilmes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3001/filmes\")  // ajusta a URL conforme sua API\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Erro ao carregar filmes\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setFilmes(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading) return <p>Carregando filmes...</p>;\r\n  if (error) return <p>Erro: {error}</p>;\r\n\r\n  return (\r\n    <div className=\"container-filmes\">\r\n      <h2>Lista de Filmes</h2>\r\n      <div className=\"row\">\r\n        {filmes.map((filme, index) => (\r\n          <div className=\"col-md-4 mb-3\" key={index}>\r\n            <div className=\"card\">\r\n              <img\r\n                src={filme.imagem}\r\n                className=\"card-img-top\"\r\n                alt={`Imagem do filme ${filme.titulo}`}\r\n              />\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{filme.titulo}</h5>\r\n                <p className=\"card-text\">{filme.descricao}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}